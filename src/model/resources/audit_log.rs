use serde::{Deserialize, Serialize};
use crate::interactions::application_commands::ApplicationCommand;
use crate::internal::traits::DiscordTypes;

/*EVENTS*/
#[derive(Debug, Serialize, Deserialize, Clone, PartialEq)]
pub enum AuditLogEvents {
    GuildUpdate = 1,
    ChannelCreate = 10,
    ChannelUpdate = 11,
    ChannelDelete = 12,
    ChannelOverwriteCreate = 13,
    ChannelOverwriteUpdate = 14,
    ChannelOverwriteDelete = 15,
    MemberKick = 20,
    MemberPrune = 21,
    MemberBanAdd = 22,
    MemberBanRemove = 23,
    MemberUpdate = 24,
    MemberRoleUpdate = 25,
    MemberMove = 26,
    MemberDisconnect = 27,
    BotAdd = 28,
    RoleCreate = 30,
    RoleUpdate = 31,
    RoleDelete = 32,
    InviteCreate = 40,
    InviteUpdate = 41,
    InviteDelete = 42,
    WebhookCreate = 50,
    WebhookUpdate = 51,
    WebhookDelete = 52,
    EmojiCreate = 60,
    EmojiUpdate = 61,
    EmojiDelete = 62,
    MessageDelete = 72,
    MessageBulkDelete = 73,
    MessagePin = 74,
    MessageUnpin = 75,
    IntegrationCreate = 80,
    IntegrationUpdate = 81,
    IntegrationDelete = 82,
    StageInstanceCreate = 83,
    StageInstanceUpdate = 84,
    StageInstanceDelete = 85,
    StickerCreate = 90,
    StickerUpdate = 91,
    StickerDelete = 92,
    GuildScheduledEventCreate = 100,
    GuildScheduledEventUpdate = 101,
    GuildScheduledEventDelete = 102,
    ThreadCreate = 110,
    ThreadUpdate = 111,
    ThreadDelete = 112,
    ApplicationCommandPermissionUpdate = 121,
    SoundboardSoundCreate = 130,
    SoundboardSoundUpdate = 131,
    SoundboardSoundDelete = 132,
    AutoModerationRuleCreate = 140,
    AutoModerationRuleUpdate = 141,
    AutoModerationRuleDelete = 142,
    AutoModerationBlockMessage = 143,
    AutoModerationFlagToChannel = 144,
    AutoModerationUserCommunicationDisabled = 145,
    CreatorMonetizationRequestCreated = 150,
    CreatorMonetizationTermsAccepted = 151,
    OnboardingPromptCreate = 163,
    OnboardingPromptUpdate = 164,
    OnboardingPromptDelete = 165,
    OnboardingCreate = 166,
    OnboardingUpdate = 167,
    HomeSettingsCreate = 190,
    HomeSettingsUpdate = 191,
}

impl DiscordTypes for AuditLogEvents {
    fn from(value: u8) -> Self {
        match value {
            1 => AuditLogEvents::GuildUpdate,
            10 => AuditLogEvents::ChannelCreate,
            11 => AuditLogEvents::ChannelUpdate,
            12 => AuditLogEvents::ChannelDelete,
            13 => AuditLogEvents::ChannelOverwriteCreate,
            14 => AuditLogEvents::ChannelOverwriteUpdate,
            15 => AuditLogEvents::ChannelOverwriteDelete,
            20 => AuditLogEvents::MemberKick,
            21 => AuditLogEvents::MemberPrune,
            22 => AuditLogEvents::MemberBanAdd,
            23 => AuditLogEvents::MemberBanRemove,
            24 => AuditLogEvents::MemberUpdate,
            25 => AuditLogEvents::MemberRoleUpdate,
            26 => AuditLogEvents::MemberMove,
            27 => AuditLogEvents::MemberDisconnect,
            28 => AuditLogEvents::BotAdd,
            30 => AuditLogEvents::RoleCreate,
            31 => AuditLogEvents::RoleUpdate,
            32 => AuditLogEvents::RoleDelete,
            40 => AuditLogEvents::InviteCreate,
            41 => AuditLogEvents::InviteUpdate,
            42 => AuditLogEvents::InviteDelete,
            50 => AuditLogEvents::WebhookCreate,
            51 => AuditLogEvents::WebhookUpdate,
            52 => AuditLogEvents::WebhookDelete,
            60 => AuditLogEvents::EmojiCreate,
            61 => AuditLogEvents::EmojiUpdate,
            62 => AuditLogEvents::EmojiDelete,
            72 => AuditLogEvents::MessageDelete,
            73 => AuditLogEvents::MessageBulkDelete,
            74 => AuditLogEvents::MessagePin,
            75 => AuditLogEvents::MessageUnpin,
            80 => AuditLogEvents::IntegrationCreate,
            81 => AuditLogEvents::IntegrationUpdate,
            82 => AuditLogEvents::IntegrationDelete,
            83 => AuditLogEvents::StageInstanceCreate,
            84 => AuditLogEvents::StageInstanceUpdate,
            85 => AuditLogEvents::StageInstanceDelete,
            90 => AuditLogEvents::StickerCreate,
            91 => AuditLogEvents::StickerUpdate,
            92 => AuditLogEvents::StickerDelete,
            100 => AuditLogEvents::GuildScheduledEventCreate,
            101 => AuditLogEvents::GuildScheduledEventUpdate,
            102 => AuditLogEvents::GuildScheduledEventDelete,
            110 => AuditLogEvents::ThreadCreate,
            111 => AuditLogEvents::ThreadUpdate,
            112 => AuditLogEvents::ThreadDelete,
            121 => AuditLogEvents::ApplicationCommandPermissionUpdate,
            130 => AuditLogEvents::SoundboardSoundCreate,
            131 => AuditLogEvents::SoundboardSoundUpdate,
            132 => AuditLogEvents::SoundboardSoundDelete,
            140 => AuditLogEvents::AutoModerationRuleCreate,
            141 => AuditLogEvents::AutoModerationRuleUpdate,
            142 => AuditLogEvents::AutoModerationRuleDelete,
            143 => AuditLogEvents::AutoModerationBlockMessage,
            144 => AuditLogEvents::AutoModerationFlagToChannel,
            145 => AuditLogEvents::AutoModerationUserCommunicationDisabled,
            150 => AuditLogEvents::CreatorMonetizationRequestCreated,
            151 => AuditLogEvents::CreatorMonetizationTermsAccepted,
            163 => AuditLogEvents::OnboardingPromptCreate,
            164 => AuditLogEvents::OnboardingPromptUpdate,
            165 => AuditLogEvents::OnboardingPromptDelete,
            166 => AuditLogEvents::OnboardingCreate,
            167 => AuditLogEvents::OnboardingUpdate,
            190 => AuditLogEvents::HomeSettingsCreate,
            191 => AuditLogEvents::HomeSettingsUpdate,
            _ => unreachable!()
        }
    }

    fn value(&self) -> u8 {
        match self {
            AuditLogEvents::GuildUpdate => 1,
            AuditLogEvents::ChannelCreate => 10,
            AuditLogEvents::ChannelUpdate => 11,
            AuditLogEvents::ChannelDelete => 12,
            AuditLogEvents::ChannelOverwriteCreate => 13,
            AuditLogEvents::ChannelOverwriteUpdate => 14,
            AuditLogEvents::ChannelOverwriteDelete => 15,
            AuditLogEvents::MemberKick => 20,
            AuditLogEvents::MemberPrune => 21,
            AuditLogEvents::MemberBanAdd => 22,
            AuditLogEvents::MemberBanRemove => 23,
            AuditLogEvents::MemberUpdate => 24,
            AuditLogEvents::MemberRoleUpdate => 25,
            AuditLogEvents::MemberMove => 26,
            AuditLogEvents::MemberDisconnect => 27,
            AuditLogEvents::BotAdd => 28,
            AuditLogEvents::RoleCreate => 30,
            AuditLogEvents::RoleUpdate => 31,
            AuditLogEvents::RoleDelete => 32,
            AuditLogEvents::InviteCreate => 40,
            AuditLogEvents::InviteUpdate => 41,
            AuditLogEvents::InviteDelete => 42,
            AuditLogEvents::WebhookCreate => 50,
            AuditLogEvents::WebhookUpdate => 51,
            AuditLogEvents::WebhookDelete => 52,
            AuditLogEvents::EmojiCreate => 60,
            AuditLogEvents::EmojiUpdate => 61,
            AuditLogEvents::EmojiDelete => 62,
            AuditLogEvents::MessageDelete => 72,
            AuditLogEvents::MessageBulkDelete => 73,
            AuditLogEvents::MessagePin => 74,
            AuditLogEvents::MessageUnpin => 75,
            AuditLogEvents::IntegrationCreate => 80,
            AuditLogEvents::IntegrationUpdate => 81,
            AuditLogEvents::IntegrationDelete => 82,
            AuditLogEvents::StageInstanceCreate => 83,
            AuditLogEvents::StageInstanceUpdate => 84,
            AuditLogEvents::StageInstanceDelete => 85,
            AuditLogEvents::StickerCreate => 90,
            AuditLogEvents::StickerUpdate => 91,
            AuditLogEvents::StickerDelete => 92,
            AuditLogEvents::GuildScheduledEventCreate => 100,
            AuditLogEvents::GuildScheduledEventUpdate => 101,
            AuditLogEvents::GuildScheduledEventDelete => 102,
            AuditLogEvents::ThreadCreate => 110,
            AuditLogEvents::ThreadUpdate => 111,
            AuditLogEvents::ThreadDelete => 112,
            AuditLogEvents::ApplicationCommandPermissionUpdate => 121,
            AuditLogEvents::SoundboardSoundCreate => 130,
            AuditLogEvents::SoundboardSoundUpdate => 131,
            AuditLogEvents::SoundboardSoundDelete => 132,
            AuditLogEvents::AutoModerationRuleCreate => 140,
            AuditLogEvents::AutoModerationRuleUpdate => 141,
            AuditLogEvents::AutoModerationRuleDelete => 142,
            AuditLogEvents::AutoModerationBlockMessage => 143,
            AuditLogEvents::AutoModerationFlagToChannel => 144,
            AuditLogEvents::AutoModerationUserCommunicationDisabled => 145,
            AuditLogEvents::CreatorMonetizationRequestCreated => 150,
            AuditLogEvents::CreatorMonetizationTermsAccepted => 151,
            AuditLogEvents::OnboardingPromptCreate => 163,
            AuditLogEvents::OnboardingPromptUpdate => 164,
            AuditLogEvents::OnboardingPromptDelete => 165,
            AuditLogEvents::OnboardingCreate => 166,
            AuditLogEvents::OnboardingUpdate => 167,
            AuditLogEvents::HomeSettingsCreate => 190,
            AuditLogEvents::HomeSettingsUpdate => 191,
        }
    }
}

/*STRUCT OBJECT*/
#[derive(Debug, Serialize, Deserialize, Clone)]
pub struct AuditLog {
    pub application_commands: Vec<ApplicationCommand>,
    pub audit_log_entries: Vec<AuditLogChange>,
    pub auto_moderation_rules: Vec<super::auto_moderation::AutoModerationRule>,
    pub guild_scheduled_events: Vec<super::guild::scheduled_event::GuildScheduledEvent>,
    pub integrations: Vec<super::guild::integration::Integration>,
    pub threads: Vec<super::channel::Channel>,
    pub users: Vec<super::user::User>,
    pub webhooks: Vec<super::webhook::Webhook>,
}

#[derive(Debug, Serialize, Deserialize, Clone)]
pub struct AuditLogChange {
    pub new_value: Option<serde_json::Value>,
    pub old_value: Option<serde_json::Value>,
    pub key: String,
}

#[derive(Debug, Serialize, Deserialize, Clone)]
pub struct AuditLogEntry {
    pub target_id: Option<String>,
    pub changes: Option<Vec<AuditLogChange>>,
    pub user_id: Option<String>,
    pub id: String,
    pub action_type: AuditLogEvents,
    pub options: Option<OptionalAuditEntryInfo>,
    pub reason: Option<String>,
}

#[derive(Debug, Serialize, Deserialize, Clone)]
pub struct OptionalAuditEntryInfo {
    pub application_id: Option<String>,
    pub auto_moderation_rule_name: Option<String>,
    pub auto_moderation_rule_trigger_type: Option<String>,
    pub channel_id: Option<String>,
    pub count: Option<String>,
    pub delete_member_days: Option<String>,
    pub id: Option<String>,
    pub members_removed: Option<String>,
    pub message_id: Option<String>,
    pub role_name: Option<String>,
    pub format_type: Option<String>,
    pub integration_type: Option<String>,
}